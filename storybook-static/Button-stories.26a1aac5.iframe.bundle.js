(self.webpackChunk=self.webpackChunk||[]).push([[303],{"./node_modules/@storybook/instrumenter/dist sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/@storybook/instrumenter/dist sync recursive",module.exports=webpackEmptyContext},"./node_modules/@storybook/test/dist sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/@storybook/test/dist sync recursive",module.exports=webpackEmptyContext},"./stories/Button.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ButtonWithLinkToAnotherStory:()=>ButtonWithLinkToAnotherStory,Emoji:()=>Emoji,Text:()=>Text,TextWithAction:()=>TextWithAction,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _storybook_test__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/test/dist/index.mjs"),_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.mjs"),_storybook_addon_links__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-links/dist/index.mjs");const __WEBPACK_DEFAULT_EXPORT__={title:"Example/Button",render:args=>({template:Ember.HTMLBars.template({id:"16rBxVt5",block:'[[[11,"button"],[4,[38,0],["click",[30,0,["onClick"]]],null],[12],[1,[30,0,["label"]]],[13]],[],false,["on"]]',moduleName:"(unknown template module)",isStrictMode:!1}),context:args}),argTypes:{label:{control:"text"}},tags:["autodocs"],args:{onClick:(0,_storybook_test__WEBPACK_IMPORTED_MODULE_0__.fn)()}},Text={args:{label:"Button"}},Emoji={args:{label:"😀 😎 👍 💯"}},TextWithAction={render:()=>({template:Ember.HTMLBars.template({id:"WobBiL7g",block:'[[[1,"\\n    "],[11,"button"],[4,[38,0],["click",[30,0,["onClick"]]],null],[12],[1,"\\n      Trigger Action\\n    "],[13],[1,"\\n  "]],[],false,["on"]]',moduleName:"(unknown template module)",isStrictMode:!1}),context:{onClick:()=>(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.XI)("This was clicked")()}}),name:"With an action",parameters:{notes:"My notes on a button with emojis"}},ButtonWithLinkToAnotherStory={render:()=>({template:Ember.HTMLBars.template({id:"wFQ5GFSc",block:'[[[1,"\\n    "],[11,"button"],[4,[38,0],["click",[30,0,["onClick"]]],null],[12],[1,"\\n      Go to Welcome Story\\n    "],[13],[1,"\\n  "]],[],false,["on"]]',moduleName:"(unknown template module)",isStrictMode:!1}),context:{onClick:(0,_storybook_addon_links__WEBPACK_IMPORTED_MODULE_2__.uM)("example-button--docs")}}),name:"button with link to another story"},__namedExportsOrder=["Text","Emoji","TextWithAction","ButtonWithLinkToAnotherStory"];Text.parameters={...Text.parameters,docs:{...Text.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Button'\n  }\n}",...Text.parameters?.docs?.source}}},Emoji.parameters={...Emoji.parameters,docs:{...Emoji.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: '😀 😎 👍 💯'\n  }\n}",...Emoji.parameters?.docs?.source}}},TextWithAction.parameters={...TextWithAction.parameters,docs:{...TextWithAction.parameters?.docs,source:{originalSource:"{\n  render: () => ({\n    template: hbs`\n    <button {{on \"click\" this.onClick}}>\n      Trigger Action\n    </button>\n  `,\n    context: {\n      onClick: () => action('This was clicked')()\n    }\n  }),\n  name: 'With an action',\n  parameters: {\n    notes: 'My notes on a button with emojis'\n  }\n}",...TextWithAction.parameters?.docs?.source}}},ButtonWithLinkToAnotherStory.parameters={...ButtonWithLinkToAnotherStory.parameters,docs:{...ButtonWithLinkToAnotherStory.parameters?.docs,source:{originalSource:"{\n  render: () => ({\n    template: hbs`\n    <button {{on \"click\" this.onClick}}>\n      Go to Welcome Story\n    </button>\n  `,\n    context: {\n      onClick: linkTo('example-button--docs')\n    }\n  }),\n  name: 'button with link to another story'\n}",...ButtonWithLinkToAnotherStory.parameters?.docs?.source}}}}}]);