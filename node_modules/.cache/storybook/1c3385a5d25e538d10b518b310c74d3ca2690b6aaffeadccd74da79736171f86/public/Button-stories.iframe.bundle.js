(self["webpackChunk"] = self["webpackChunk"] || []).push([["Button-stories"],{

/***/ "./node_modules/@storybook/instrumenter/dist sync recursive":
/*!*********************************************************!*\
  !*** ./node_modules/@storybook/instrumenter/dist/ sync ***!
  \*********************************************************/
/***/ ((module) => {

function webpackEmptyContext(req) {
	var e = new Error("Cannot find module '" + req + "'");
	e.code = 'MODULE_NOT_FOUND';
	throw e;
}
webpackEmptyContext.keys = () => ([]);
webpackEmptyContext.resolve = webpackEmptyContext;
webpackEmptyContext.id = "./node_modules/@storybook/instrumenter/dist sync recursive";
module.exports = webpackEmptyContext;

/***/ }),

/***/ "./node_modules/@storybook/test/dist sync recursive":
/*!*************************************************!*\
  !*** ./node_modules/@storybook/test/dist/ sync ***!
  \*************************************************/
/***/ ((module) => {

function webpackEmptyContext(req) {
	var e = new Error("Cannot find module '" + req + "'");
	e.code = 'MODULE_NOT_FOUND';
	throw e;
}
webpackEmptyContext.keys = () => ([]);
webpackEmptyContext.resolve = webpackEmptyContext;
webpackEmptyContext.id = "./node_modules/@storybook/test/dist sync recursive";
module.exports = webpackEmptyContext;

/***/ }),

/***/ "./stories/Button.stories.js":
/*!***********************************!*\
  !*** ./stories/Button.stories.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ButtonWithLinkToAnotherStory: () => (/* binding */ ButtonWithLinkToAnotherStory),
/* harmony export */   Emoji: () => (/* binding */ Emoji),
/* harmony export */   Text: () => (/* binding */ Text),
/* harmony export */   TextWithAction: () => (/* binding */ TextWithAction),
/* harmony export */   __namedExportsOrder: () => (/* binding */ __namedExportsOrder),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _storybook_test__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @storybook/test */ "./node_modules/@storybook/test/dist/index.mjs");
/* harmony import */ var _storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @storybook/addon-actions */ "./node_modules/@storybook/addon-actions/dist/index.mjs");
/* harmony import */ var _storybook_addon_links__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @storybook/addon-links */ "./node_modules/@storybook/addon-links/dist/index.mjs");



// More on how to set up stories at: https://storybook.js.org/docs/writing-stories
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  title: 'Example/Button',
  render: args => ({
    template: Ember.HTMLBars.template(
    /*
      <button {{on "click" this.onClick}}>{{this.label}}</button>
    */
    {
      "id": "16rBxVt5",
      "block": "[[[11,\"button\"],[4,[38,0],[\"click\",[30,0,[\"onClick\"]]],null],[12],[1,[30,0,[\"label\"]]],[13]],[],false,[\"on\"]]",
      "moduleName": "(unknown template module)",
      "isStrictMode": false
    }),
    context: args
  }),
  argTypes: {
    label: {
      control: 'text'
    }
  },
  // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/ember/writing-docs/autodocs
  tags: ['autodocs'],
  args: {
    onClick: (0,_storybook_test__WEBPACK_IMPORTED_MODULE_0__.fn)()
  }
});

// More on writing stories with args: https://storybook.js.org/docs/writing-stories/args
const Text = {
  args: {
    label: 'Button'
  }
};
const Emoji = {
  args: {
    label: '😀 😎 👍 💯'
  }
};
const TextWithAction = {
  render: () => ({
    template: Ember.HTMLBars.template(
    /*
      
        <button {{on "click" this.onClick}}>
          Trigger Action
        </button>
      
    */
    {
      "id": "WobBiL7g",
      "block": "[[[1,\"\\n    \"],[11,\"button\"],[4,[38,0],[\"click\",[30,0,[\"onClick\"]]],null],[12],[1,\"\\n      Trigger Action\\n    \"],[13],[1,\"\\n  \"]],[],false,[\"on\"]]",
      "moduleName": "(unknown template module)",
      "isStrictMode": false
    }),
    context: {
      onClick: () => (0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.action)('This was clicked')()
    }
  }),
  name: 'With an action',
  parameters: {
    notes: 'My notes on a button with emojis'
  }
};
const ButtonWithLinkToAnotherStory = {
  render: () => ({
    template: Ember.HTMLBars.template(
    /*
      
        <button {{on "click" this.onClick}}>
          Go to Welcome Story
        </button>
      
    */
    {
      "id": "wFQ5GFSc",
      "block": "[[[1,\"\\n    \"],[11,\"button\"],[4,[38,0],[\"click\",[30,0,[\"onClick\"]]],null],[12],[1,\"\\n      Go to Welcome Story\\n    \"],[13],[1,\"\\n  \"]],[],false,[\"on\"]]",
      "moduleName": "(unknown template module)",
      "isStrictMode": false
    }),
    context: {
      onClick: (0,_storybook_addon_links__WEBPACK_IMPORTED_MODULE_2__.linkTo)('example-button--docs')
    }
  }),
  name: 'button with link to another story'
};
;
const __namedExportsOrder = ["Text", "Emoji", "TextWithAction", "ButtonWithLinkToAnotherStory"];
Text.parameters = {
  ...Text.parameters,
  docs: {
    ...Text.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    label: 'Button'\n  }\n}",
      ...Text.parameters?.docs?.source
    }
  }
};
Emoji.parameters = {
  ...Emoji.parameters,
  docs: {
    ...Emoji.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    label: '\uD83D\uDE00 \uD83D\uDE0E \uD83D\uDC4D \uD83D\uDCAF'\n  }\n}",
      ...Emoji.parameters?.docs?.source
    }
  }
};
TextWithAction.parameters = {
  ...TextWithAction.parameters,
  docs: {
    ...TextWithAction.parameters?.docs,
    source: {
      originalSource: "{\n  render: () => ({\n    template: hbs`\n    <button {{on \"click\" this.onClick}}>\n      Trigger Action\n    </button>\n  `,\n    context: {\n      onClick: () => action('This was clicked')()\n    }\n  }),\n  name: 'With an action',\n  parameters: {\n    notes: 'My notes on a button with emojis'\n  }\n}",
      ...TextWithAction.parameters?.docs?.source
    }
  }
};
ButtonWithLinkToAnotherStory.parameters = {
  ...ButtonWithLinkToAnotherStory.parameters,
  docs: {
    ...ButtonWithLinkToAnotherStory.parameters?.docs,
    source: {
      originalSource: "{\n  render: () => ({\n    template: hbs`\n    <button {{on \"click\" this.onClick}}>\n      Go to Welcome Story\n    </button>\n  `,\n    context: {\n      onClick: linkTo('example-button--docs')\n    }\n  }),\n  name: 'button with link to another story'\n}",
      ...ButtonWithLinkToAnotherStory.parameters?.docs?.source
    }
  }
};

/***/ })

}]);
//# sourceMappingURL=Button-stories.iframe.bundle.js.map